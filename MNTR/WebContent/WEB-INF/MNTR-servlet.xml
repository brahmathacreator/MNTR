<?xml  version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jee="http://www.springframework.org/schema/jee" xmlns:lang="http://www.springframework.org/schema/lang"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:util="http://www.springframework.org/schema/util" xmlns:batch="http://www.springframework.org/schema/batch"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	 	http://www.springframework.org/schema/beans/spring-beans.xsd
	 	http://www.springframework.org/schema/mvc
	 	 http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/aop 
        http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/context 
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/jee 
        http://www.springframework.org/schema/jee/spring-jee.xsd
        http://www.springframework.org/schema/lang 
        http://www.springframework.org/schema/lang/spring-lang.xsd
        http://www.springframework.org/schema/tx 
        http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/util 
        http://www.springframework.org/schema/util/spring-util.xsd
        http://www.springframework.org/schema/batch
        http://www.springframework.org/schema/batch/spring-batch.xsd">

	<context:annotation-config />
	<context:component-scan base-package="com.cbo.mntr.controller" />
	<context:component-scan base-package="com.cbo.mntr.dao" />
	<context:component-scan base-package="com.cbo.mntr.events" />
	<context:component-scan base-package="com.cbo.mntr.service" />

	<bean id="tilesConfigurer"
		class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">
		<property name="definitions">
			<list>
				<value>/WEB-INF/views/**/tiles.xml</value>
			</list>
		</property>
	</bean>

	<bean id="tilesViewResolver"
		class="org.springframework.web.servlet.view.UrlBasedViewResolver">
		<property name="viewClass"
			value="org.springframework.web.servlet.view.tiles3.TilesView">
		</property>
	</bean>

	<bean id="messageSource"
		class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<property name="basename" value="classpath:messages" />
		<property name="defaultEncoding" value="UTF-8" />
	</bean>
	<bean id="mntrProperties"
		class="org.springframework.beans.factory.config.PropertiesFactoryBean">
		<property name="locations">
			<list>
				<value>classpath:jdbc.properties</value>
				<value>classpath:config.properties</value>
			</list>
		</property>
	</bean>
	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="properties" ref="mntrProperties" />
	</bean>

	<bean id="localeResolver"
		class="org.springframework.web.servlet.i18n.SessionLocaleResolver">
		<property name="defaultLocale" value="en" />
	</bean>

	<bean id="localeChangeInterceptor"
		class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor">
		<property name="paramName" value="lang" />
	</bean>

	<bean id="themeSource"
		class="org.springframework.ui.context.support.ResourceBundleThemeSource">
		<property name="basenamePrefix" value="theme-" />
	</bean>
	<bean id="themeChangeInterceptor"
		class="org.springframework.web.servlet.theme.ThemeChangeInterceptor">
		<property name="paramName" value="theme" />
	</bean>
	<bean id="themeResolver"
		class="org.springframework.web.servlet.theme.CookieThemeResolver">
		<property name="defaultThemeName" value="L1T1" />
	</bean>

	<mvc:interceptors>
		<ref bean="localeChangeInterceptor" />
		<ref bean="themeChangeInterceptor" />
	</mvc:interceptors>

	<mvc:annotation-driven validator="myBeansValidator" />
	<bean id="myBeansValidator"
		class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean" />

	<mvc:default-servlet-handler />
	<mvc:resources location="/resources/**" mapping="/resources/"></mvc:resources>

	<bean id="hikariConfig" class="com.zaxxer.hikari.HikariConfig">
		<property name="poolName" value="springHikariCP" />
		<property name="connectionTestQuery" value="SELECT 1" />
		<property name="dataSourceClassName"
			value="com.mysql.jdbc.jdbc2.optional.MysqlDataSource" />
		<property name="dataSourceProperties">
			<props>
				<prop key="url">${jdbc.databaseurl}</prop>
				<prop key="user">${jdbc.username}</prop>
				<prop key="password">${jdbc.password}</prop>
			</props>
		</property>
	</bean>

	<bean id="dataSource" class="com.zaxxer.hikari.HikariDataSource"
		destroy-method="close">
		<constructor-arg ref="hikariConfig" />
	</bean>

	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
		<property name="packagesToScan" value="com.cbo.mntr.entity" />
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">${jdbc.dialect}</prop>
				<prop key="hibernate.show_sql">false</prop>
			</props>
		</property>
	</bean>

	<tx:annotation-driven />
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>

	<bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<property name="host" value="${smtp.host}" />
		<property name="port" value="${smtp.port}" />
		<property name="username" value="${smtp.username}" />
		<property name="password" value="${smtp.password}" />
		<property name="javaMailProperties">
			<props>
				<prop key="mail.debug">${mail.debug}</prop>
				<prop key="mail.smtp.auth">${mail.smtp.auth}</prop>
				<prop key="mail.smtp.starttls.enable">${mail.smtp.starttls.enable}</prop>
				<prop key="mail.mime.charset">${mail.mime.charset}</prop>
				<prop key="mail.transport.protocol">${smtp.protocol}</prop>
			</props>
		</property>
	</bean>

	<bean id="applicationEventMulticaster"
		class="com.cbo.mntr.events.eventcaster.DistributiveEventMulticaster">
		<property name="syncEventMulticaster">
			<bean
				class="org.springframework.context.event.SimpleApplicationEventMulticaster">
			</bean>
		</property>
		<property name="asyncEventMulticaster">
			<bean
				class="org.springframework.context.event.SimpleApplicationEventMulticaster">
				<property name="taskExecutor">
					<bean
						class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor" />
				</property>
			</bean>
		</property>
	</bean>

	<bean id="velocityEngine"
		class="org.springframework.ui.velocity.VelocityEngineFactoryBean">
		<property name="velocityProperties">
			<props>
				<prop key="resource.loader">class</prop>
				<prop key="class.resource.loader.class">
					org.apache.velocity.runtime.resource.loader.ClasspathResourceLoader
				</prop>
			</props>
		</property>
	</bean>

	<!-- JobRepository and JobLauncher configuration/setup classes -->
	<bean id="jobRepository"
		class="org.springframework.batch.core.repository.support.MapJobRepositoryFactoryBean" />

	<bean id="jobLauncher"
		class="org.springframework.batch.core.launch.support.SimpleJobLauncher">
		<property name="jobRepository" ref="jobRepository" />
	</bean>

	<batch:job id="menuDetailsJob">
		<batch:step id="step1" next="step2">
			<batch:tasklet transaction-manager="transactionManager">
				<batch:chunk reader="menuDetailsMultiResourceReader"
					writer="databaseItemWriter" processor="menuDetailProcessor"
					commit-interval="10" />
			</batch:tasklet>
		</batch:step>
		<batch:step id="step2">
			<batch:tasklet transaction-manager="transactionManager">
				<batch:chunk reader="menuDetailsMultiResourceReader"
					writer="databaseItemWriter" processor="menuDetailProcessor"
					commit-interval="10" />
			</batch:tasklet>
		</batch:step>
		<batch:listeners>
			<batch:listener ref="menuDetailListener" />
		</batch:listeners>
	</batch:job>

	<bean id="menuDetailsMultiResourceReader"
		class="org.springframework.batch.item.file.MultiResourceItemReader">
		<property name="resources" value="classpath:job/job_menudetails*.csv" />
		<property name="delegate" ref="menuDetailsReader" />
	</bean>

	<bean id="menuDetailsReader" class="org.springframework.batch.item.file.FlatFileItemReader"
		scope="step">
		<property name="lineMapper">
			<bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
				<property name="fieldSetMapper">
					<bean class="com.cbo.mntr.mapper.MenuDetailMapper" />
				</property>
				<property name="lineTokenizer">
					<bean
						class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer">
						<property name="delimiter" value="," />
					</bean>
				</property>
			</bean>
		</property>
	</bean>

	<bean id="databaseItemWriter"
		class="org.springframework.batch.item.database.HibernateItemWriter">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	<bean id="menuDetailProcessor" class="com.cbo.mntr.job.itemprscr.MenuDetailsItemProcessor" />
	<bean id="menuDetailListener" class="com.cbo.mntr.job.listener.MenuDetailsJobListener" />

</beans>