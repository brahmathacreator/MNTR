package com.org.mntr.entity;
// Generated 11-Aug-2017 13:10:52 by Hibernate Tools 5.2.3.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

/**
 * UserInfo generated by hbm2java
 */
@Entity
@Table(name = "user_info", catalog = "rdev", uniqueConstraints = @UniqueConstraint(columnNames = "USER_ID"))
public class UserInfo implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private Long userKey;
	private String userId;
	private String username;
	private Date lastLoginDt;
	private Integer lockStatus;
	private Integer invalidPassAttempts;
	private Integer status;
	private Long createdBy;
	private Date createdDt;
	private Long modifiedBy;
	private Date modifiedDt;
	private Integer loginType;
	private String email;
	private String phoneNo;
	private String userLogoName;
	private PasswordDetails passwordDetailses;
	private Set<UserRoleMapping> userRoleMappings = new HashSet<UserRoleMapping>(0);
	private Set<PasswordHistoryDetails> passwordHistoryDetailses = new HashSet<PasswordHistoryDetails>(0);

	public UserInfo() {
	}

	public UserInfo(String userId, String username, Date lastLoginDt, Integer lockStatus, Integer invalidPassAttempts,
			Integer status, Long createdBy, Date createdDt, Long modifiedBy, Date modifiedDt, Integer loginType,
			String email, String phoneNo, String userLogoName) {
		this.userId = userId;
		this.username = username;
		this.lastLoginDt = lastLoginDt;
		this.lockStatus = lockStatus;
		this.invalidPassAttempts = invalidPassAttempts;
		this.status = status;
		this.createdBy = createdBy;
		this.createdDt = createdDt;
		this.modifiedBy = modifiedBy;
		this.modifiedDt = modifiedDt;
		this.loginType = loginType;
		this.email = email;
		this.phoneNo = phoneNo;
		this.userLogoName = userLogoName;
	}

	public UserInfo(String userId, String username, Date lastLoginDt, Integer lockStatus, Integer invalidPassAttempts,
			Integer status, Long createdBy, Date createdDt, Long modifiedBy, Date modifiedDt, Integer loginType,
			String email, String phoneNo, String userLogoName, Set<UserRoleMapping> userRoleMappings,
			Set<PasswordHistoryDetails> passwordHistoryDetailses, PasswordDetails passwordDetailses) {
		this.userId = userId;
		this.username = username;
		this.lastLoginDt = lastLoginDt;
		this.lockStatus = lockStatus;
		this.invalidPassAttempts = invalidPassAttempts;
		this.status = status;
		this.createdBy = createdBy;
		this.createdDt = createdDt;
		this.modifiedBy = modifiedBy;
		this.modifiedDt = modifiedDt;
		this.loginType = loginType;
		this.email = email;
		this.phoneNo = phoneNo;
		this.userLogoName = userLogoName;
		this.userRoleMappings = userRoleMappings;
		this.passwordHistoryDetailses = passwordHistoryDetailses;
		this.passwordDetailses = passwordDetailses;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "USER_KEY", unique = true, nullable = false)
	public Long getUserKey() {
		return this.userKey;
	}

	public void setUserKey(Long userKey) {
		this.userKey = userKey;
	}

	@Column(name = "USER_ID", unique = true, nullable = false, length = 250)
	public String getUserId() {
		return this.userId;
	}

	public void setUserId(String userId) {
		this.userId = userId;
	}

	@Column(name = "USERNAME", nullable = false, length = 250)
	public String getUsername() {
		return this.username;
	}

	public void setUsername(String username) {
		this.username = username;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "LAST_LOGIN_DT", nullable = false, length = 19)
	public Date getLastLoginDt() {
		return this.lastLoginDt;
	}

	public void setLastLoginDt(Date lastLoginDt) {
		this.lastLoginDt = lastLoginDt;
	}

	@Column(name = "LOCK_STATUS", nullable = false)
	public Integer getLockStatus() {
		return this.lockStatus;
	}

	public void setLockStatus(Integer lockStatus) {
		this.lockStatus = lockStatus;
	}

	@Column(name = "INVALID_PASS_ATTEMPTS", nullable = false)
	public Integer getInvalidPassAttempts() {
		return this.invalidPassAttempts;
	}

	public void setInvalidPassAttempts(Integer invalidPassAttempts) {
		this.invalidPassAttempts = invalidPassAttempts;
	}

	@Column(name = "STATUS", nullable = false)
	public Integer getStatus() {
		return this.status;
	}

	public void setStatus(Integer status) {
		this.status = status;
	}

	@Column(name = "CREATED_BY", nullable = false)
	public Long getCreatedBy() {
		return this.createdBy;
	}

	public void setCreatedBy(Long createdBy) {
		this.createdBy = createdBy;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CREATED_DT", nullable = false, length = 19)
	public Date getCreatedDt() {
		return this.createdDt;
	}

	public void setCreatedDt(Date createdDt) {
		this.createdDt = createdDt;
	}

	@Column(name = "MODIFIED_BY", nullable = false)
	public Long getModifiedBy() {
		return this.modifiedBy;
	}

	public void setModifiedBy(Long modifiedBy) {
		this.modifiedBy = modifiedBy;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "MODIFIED_DT", nullable = false, length = 19)
	public Date getModifiedDt() {
		return this.modifiedDt;
	}

	public void setModifiedDt(Date modifiedDt) {
		this.modifiedDt = modifiedDt;
	}

	@Column(name = "LOGIN_TYPE", nullable = false)
	public Integer getLoginType() {
		return this.loginType;
	}

	public void setLoginType(Integer loginType) {
		this.loginType = loginType;
	}

	@Column(name = "EMAIL", nullable = false, length = 250)
	public String getEmail() {
		return this.email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	@Column(name = "PHONE_NO", nullable = false, length = 50)
	public String getPhoneNo() {
		return this.phoneNo;
	}

	public void setPhoneNo(String phoneNo) {
		this.phoneNo = phoneNo;
	}

	@Column(name = "USER_LOGO_NAME", nullable = false)
	public String getUserLogoName() {
		return this.userLogoName;
	}

	public void setUserLogoName(String userLogoName) {
		this.userLogoName = userLogoName;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "userInfo")
	public Set<UserRoleMapping> getUserRoleMappings() {
		return this.userRoleMappings;
	}

	public void setUserRoleMappings(Set<UserRoleMapping> userRoleMappings) {
		this.userRoleMappings = userRoleMappings;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "userInfo")
	public Set<PasswordHistoryDetails> getPasswordHistoryDetailses() {
		return this.passwordHistoryDetailses;
	}

	public void setPasswordHistoryDetailses(Set<PasswordHistoryDetails> passwordHistoryDetailses) {
		this.passwordHistoryDetailses = passwordHistoryDetailses;
	}

	@OneToOne(fetch = FetchType.LAZY, mappedBy = "userInfo")
	public PasswordDetails getPasswordDetailses() {
		return this.passwordDetailses;
	}

	public void setPasswordDetailses(PasswordDetails passwordDetailses) {
		this.passwordDetailses = passwordDetailses;
	}

}
