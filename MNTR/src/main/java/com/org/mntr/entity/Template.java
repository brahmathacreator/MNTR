package com.org.mntr.entity;
// Generated 11-Aug-2017 13:10:52 by Hibernate Tools 5.2.3.Final

import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

/**
 * Template generated by hbm2java
 */
@Entity
@Table(name = "template", catalog = "rdev", uniqueConstraints = { @UniqueConstraint(columnNames = "CATEGORY_ID"),
		@UniqueConstraint(columnNames = "HOST_NAME") })
public class Template implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private Long templateId;
	private Category category;
	private String hostName;
	private Long checkInterval;
	private Long retryIntervel;
	private Long maxCheckAttempts;
	private Long alertsGroupId;
	private Integer status;
	private Long createdBy;
	private Date createdDt;
	private Long modifiedBy;
	private Date modifiedDt;

	public Template() {
	}

	public Template(Category category, String hostName, Long checkInterval, Long retryIntervel, Long maxCheckAttempts,
			Long alertsGroupId, Integer status, Long createdBy, Date createdDt, Long modifiedBy, Date modifiedDt) {
		this.category = category;
		this.hostName = hostName;
		this.checkInterval = checkInterval;
		this.retryIntervel = retryIntervel;
		this.maxCheckAttempts = maxCheckAttempts;
		this.alertsGroupId = alertsGroupId;
		this.status = status;
		this.createdBy = createdBy;
		this.createdDt = createdDt;
		this.modifiedBy = modifiedBy;
		this.modifiedDt = modifiedDt;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "TEMPLATE_ID", unique = true, nullable = false)
	public Long getTemplateId() {
		return this.templateId;
	}

	public void setTemplateId(Long templateId) {
		this.templateId = templateId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "CATEGORY_ID", unique = true, nullable = false)
	public Category getCategory() {
		return this.category;
	}

	public void setCategory(Category category) {
		this.category = category;
	}

	@Column(name = "HOST_NAME", unique = true, nullable = false)
	public String getHostName() {
		return this.hostName;
	}

	public void setHostName(String hostName) {
		this.hostName = hostName;
	}

	@Column(name = "CHECK_INTERVAL", nullable = false)
	public Long getCheckInterval() {
		return this.checkInterval;
	}

	public void setCheckInterval(Long checkInterval) {
		this.checkInterval = checkInterval;
	}

	@Column(name = "RETRY_INTERVEL", nullable = false)
	public Long getRetryIntervel() {
		return this.retryIntervel;
	}

	public void setRetryIntervel(Long retryIntervel) {
		this.retryIntervel = retryIntervel;
	}

	@Column(name = "MAX_CHECK_ATTEMPTS", nullable = false)
	public Long getMaxCheckAttempts() {
		return this.maxCheckAttempts;
	}

	public void setMaxCheckAttempts(Long maxCheckAttempts) {
		this.maxCheckAttempts = maxCheckAttempts;
	}

	@Column(name = "ALERTS_GROUP_ID", nullable = false)
	public Long getAlertsGroupId() {
		return this.alertsGroupId;
	}

	public void setAlertsGroupId(Long alertsGroupId) {
		this.alertsGroupId = alertsGroupId;
	}

	@Column(name = "STATUS", nullable = false)
	public Integer getStatus() {
		return this.status;
	}

	public void setStatus(Integer status) {
		this.status = status;
	}

	@Column(name = "CREATED_BY", nullable = false)
	public Long getCreatedBy() {
		return this.createdBy;
	}

	public void setCreatedBy(Long createdBy) {
		this.createdBy = createdBy;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CREATED_DT", nullable = false, length = 19)
	public Date getCreatedDt() {
		return this.createdDt;
	}

	public void setCreatedDt(Date createdDt) {
		this.createdDt = createdDt;
	}

	@Column(name = "MODIFIED_BY", nullable = false)
	public Long getModifiedBy() {
		return this.modifiedBy;
	}

	public void setModifiedBy(Long modifiedBy) {
		this.modifiedBy = modifiedBy;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "MODIFIED_DT", nullable = false, length = 19)
	public Date getModifiedDt() {
		return this.modifiedDt;
	}

	public void setModifiedDt(Date modifiedDt) {
		this.modifiedDt = modifiedDt;
	}

}
